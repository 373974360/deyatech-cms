<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deyatech.statistics.mapper.DepartmentDataMapper">
    <!--部门发稿检索条件-->
    <sql id="departmentContentQuery">
        from station_template t
        <if test="queryVo.type == 'site'">
            join (
                select su.user_Id as user_Id, u.department_id
                from resource_station_group_user su
                join admin_user u on u.id_ = su.user_Id and u.enable_ = 1
                where su.station_group_id = #{queryVo.siteId}
            ) tbu on tbu.user_id = t.create_by
        </if>
        <if test="queryVo.type == 'department'">
            join (
                select distinct u.id_ as user_id, u.department_id
                from admin_user u
                join (
                    select distinct ad.id_ as department_id
                    from admin_department ad,
                    (
                        select distinct da.department_id
                        from resource_station_group_department_admin da
                        join admin_department d on d.id_ = da.department_id and d.enable_ = 1
                        where da.user_id = #{queryVo.userId} and da.site_id = #{queryVo.siteId}
                    ) td
                    where ad.id_ = td.department_id or ad.tree_position like concat('&amp;', td.department_id, '%')
                ) tdd on tdd.department_id = u.department_id
                where u.enable_ = 1
            ) tbu on tbu.user_id = t.create_by
        </if>
        where t.site_id = #{queryVo.siteId}
        <if test="queryVo.startTime != null and queryVo.startTime != '' and queryVo.endTime != null and queryVo.endTime != ''">
            and DATE_FORMAT(t.resource_publication_date, '%Y-%m-%d') between #{queryVo.startTime} and #{queryVo.endTime}
        </if>
        and t.status_ in (2, 3)
        and t.enable_ = 1
    </sql>

    <!--统计用户发稿量-->
    <select id="countDepartmentContentData" resultType="java.util.Map">
        select tbu.department_id as departmentId, t.status_ as contentStatus, count(1) as contentNumber
        <include refid="departmentContentQuery"></include>
        group by tbu.department_id, t.status_
    </select>

    <!--统计部门发稿量 最小日期-->
    <select id="getDepartmentContentDataMinDate" resultType="java.lang.String">
        select min(DATE_FORMAT(t.resource_publication_date, '%Y-%m-%d')) as minDate
        <include refid="departmentContentQuery"></include>
    </select>

    <!--统计部门发稿量 最大日期-->
    <select id="getDepartmentContentDataMaxDate" resultType="java.lang.String">
        select max(DATE_FORMAT(t.resource_publication_date, '%Y-%m-%d')) as maxDate
        <include refid="departmentContentQuery"></include>
    </select>



    <!--用户栏目发稿检索条件-->
    <sql id="departmentCatalogContentQuery">
        from station_template t
        join station_catalog_template ct on ct.template_id = t.id_ and ct.origin_type = 1
        join (
            select distinct u.id_ as user_id
            from admin_user u
            join (
                select distinct ad.id_ as department_id
                from admin_department ad
                where ad.id_ = #{queryVo.departmentId} or ad.tree_position like concat('&amp;', #{queryVo.departmentId}, '%')
            ) tdd on tdd.department_id = u.department_id
            where u.enable_ = 1
        ) tbu on tbu.user_id = t.create_by
        where
        t.site_id = #{queryVo.siteId}
        <if test="queryVo.startTime != null and queryVo.startTime != '' and queryVo.endTime != null and queryVo.endTime != ''">
            and DATE_FORMAT(t.resource_publication_date, '%Y-%m-%d') between #{queryVo.startTime} and #{queryVo.endTime}
        </if>
        and t.status_ in (2, 3)
        and t.enable_ = 1
    </sql>

    <!--统计栏目发稿量-->
    <select id="countCatalogContentData" resultType="java.util.Map">
        select ct.catalog_id as catalogId, t.status_ as contentStatus, count(1) as contentNumber
        <include refid="departmentCatalogContentQuery"></include>
        group by ct.catalog_id, t.status_
    </select>

    <!--统计栏目发稿量 最小日期-->
    <select id="getCatalogContentDataMinDate" resultType="java.lang.String">
        select min(DATE_FORMAT(t.resource_publication_date, '%Y-%m-%d')) as minDate
        <include refid="departmentCatalogContentQuery"></include>
    </select>

    <!--统计栏目发稿量 最大日期-->
    <select id="getCatalogContentDataMaxDate" resultType="java.lang.String">
        select max(DATE_FORMAT(t.resource_publication_date, '%Y-%m-%d')) as maxDate
        <include refid="departmentCatalogContentQuery"></include>
    </select>

    <!--部门栏目内容-->
    <select id="pageDepartmentCatalogTemplate" resultType="com.deyatech.statistics.vo.DepartmentUserDataResultVo">
        select
        c.name as catalogName,
        t.title_ as title,
        DATE_FORMAT(t.resource_publication_date, '%Y-%m-%d %H:%i') as publishTime,
        DATE_FORMAT(t.create_time, '%Y-%m-%d %H:%i') as createTime
        from station_template t
        join station_catalog_template ct on ct.template_id = t.id_ and ct.origin_type = 1
        join station_catalog c on c.id_ = ct.catalog_id and c.enable_ = 1
        join admin_user u on u.id_ = t.create_by and u.enable_ = 1
        join admin_department d on d.id_ = u.department_id and d.enable_ = 1
        where d.id_ = #{queryVo.departmentId} and c.id_ = #{queryVo.catalogId} and t.enable_ = 1
        order by t.resource_publication_date desc
    </select>

</mapper>
